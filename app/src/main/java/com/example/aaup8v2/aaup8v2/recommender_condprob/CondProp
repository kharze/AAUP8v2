package com.example.aaup8v2.aaup8v2.recommender_condprob;

import com.example.aaup8v2.aaup8v2.MainActivity;
import com.example.aaup8v2.aaup8v2.SpotifyAccess;

import java.lang.IllegalArgumentException;
import java.lang.Math;
import java.util.List;
import java.util.concurrent.ExecutionException;

import kaaes.spotify.webapi.android.models.Pager;
import kaaes.spotify.webapi.android.models.Playlist;

//Item based Collaborative Filtering Recommender using Conditional Probability
public class Recommender extends MainActivity {
    private string[] mGenres;
    private string[] mArtists;
    private int[] mUsers;
    private int[][] mMatrix;

    //inverse document frequency, term frequency
    private List<int> idf-tf(E[] tf, E[] idf){
        List<int> idf_tf = new ArrayList<int>();
        for (int i = 0; idf[i] < idf.length; i++)
            idf_tf.add(Math.log(tf[i]) * idf[i]);
        return idf_tf;
    }
}